metadata {
 	definition (name: "Alarm On/Off Button Tile", namespace: "Alarm", author: "adapted from 949BFN") {
 		capability "Actuator"
 		capability "Switch"
 		capability "Sensor"
        attribute "alarm","string"
        attribute "Monday", "string"
        attribute "Tuesday", "string"
        attribute "Wednesday", "string"
        attribute "Thursday", "string"
        attribute "Friday", "string"
        attribute "Saturday", "string"
        attribute "Sunday", "string"
        attribute "SetByA", "string"        
        attribute "AllowAppTime", "string"
        attribute "NotifyText", "string"
        command "changeAlarmTime"
        command "Monday_On"
        command "Monday_Off"
        command "Tuesday_On"
        command "Tuesday_Off"
        command "Wednesday_On"
        command "Wednesday_Off"
        command "Thursday_On"
        command "Thursday_Off"
        command "Friday_On"
        command "Friday_Off"
        command "Saturday_On"
        command "Saturday_Off"
        command "Sunday_On"
        command "Sunday_Off"
        command "SetByC"    
        command "AllowAppTime_On"
        command "AllowAppTime_Off"        
     }
     preferences {
     input name: "timer", type: "time", title: "Alarm Time", description: "Enter Time", required: false
     }
     input name: "NotifyText", type: "string", title: "Enter Notification", description: "Enter Notification", required: false, defaultValue: "Note"
 	}
    

 	// UI tile definitions
 	tiles {
 		multiAttributeTile(name:"switch", type: "generic", width: 6, height: 4, canChangeIcon: true, canChangeBackground: false){
			tileAttribute ("device.switch", key: "PRIMARY_CONTROL") {
 			attributeState "off", label: 'off', action: "switch.on", icon: "st.Office.office6", backgroundColor: "#ffffff"
 			attributeState "on", label: 'on', action: "switch.off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
 		}
        }
 		valueTile("alarm", "device.alarm", width: 6, height: 3) {
 			state "default", label:'${currentValue}',backgroundColor: "#00A0DC"
 		}
		valueTile("SetByA", "device.SetByA", width: 6, height: 2, canChangeBackground: true) {
 			state "default", label:'${currentValue}'
 		}
        valueTile("NotifyText", "device.NotifyText", width: 6, height: 1, canChangeBackground: true) {
 			state "default", label:'${currentValue}'
 		}
        standardTile("AllowAppTime", "device.AllowAppTime",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "AllowAppTime", action: "AllowAppTime_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "AllowAppTime", action: "AllowAppTime_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
		standardTile("Monday", "device.Monday",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "Monday", action: "Monday_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "Monday", action: "Monday_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
        standardTile("Tuesday", "device.Tuesday",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "Tuesday", action: "Tuesday_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "Tuesday", action: "Tuesday_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
   		standardTile("Wednesday", "device.Wednesday",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "Wednesday", action: "Wednesday_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "Wednesday", action: "Wednesday_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
   		standardTile("Thursday", "device.Thursday",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "Thursday", action: "Thursday_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "Thursday", action: "Thursday_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
   		standardTile("Friday", "device.Friday",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "Friday", action: "Friday_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "Friday", action: "Friday_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
   		standardTile("Saturday", "device.Saturday",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "Saturday", action: "Saturday_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "Saturday", action: "Saturday_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
   		standardTile("Sunday", "device.Sunday",canChangeIcon: true, width: 6, height: 1) {
		state "on", label: "Sunday", action: "Sunday_Off", icon: "st.Office.office6", backgroundColor: "#00A0DC"
		state "off", label: "Sunday", action: "Sunday_On", icon: "st.Office.office6", backgroundColor: "#ffffff"
    }
 		main(["switch","alarm"])
 		details(["switch","alarm","AllowAppTime","SetByA","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","NotifyText"])
 	}
 
 def parse() {
 }
 def updated() {
        def time = timer.substring(11,16)
         def tz = location.timeZone
 		def schedTime = time //Today(timer, tz)
 		//def ntime = schedTime.format("H",tz)
 		//def min = schedTime.format("m",tz)
         //def newtime = schedTime.format('HH:mm:ss', tz).toString()
     if(timer) {
     		log.debug "Alarm time set to: $timer"
             sendEvent("name":"image", "value":schedTime)
             sendEvent("name":"alarm", "value":time)
     } else {
     		log.debug "No departure time is set"
     		}
 }
 def on(){
 sendEvent(name:"switch",value:"on")
 }
 def off(){
 sendEvent(name:"switch",value:"off")
 } 
 def changeAlarmTime(paramTime) {
    sendEvent("name":"alarm", "value":paramTime)
}
def Monday_On(){
 sendEvent(name:"Monday",value:"on")
 sendEvent(name:"switch",value:"on")
 }
 def Monday_Off(){
 sendEvent(name:"Monday",value:"off")
 } 
def Tuesday_On(){
 sendEvent(name:"Tuesday",value:"on")
 sendEvent(name:"switch",value:"on")
 }
 def Tuesday_Off(){
 sendEvent(name:"Tuesday",value:"off")
 } 
def Wednesday_On(){
 sendEvent(name:"Wednesday",value:"on")
 sendEvent(name:"switch",value:"on")
 }
 def Wednesday_Off(){
 sendEvent(name:"Wednesday",value:"off")
 } 
def Thursday_On(){
 sendEvent(name:"Thursday",value:"on")
 sendEvent(name:"switch",value:"on")
 }
 def Thursday_Off(){
 sendEvent(name:"Thursday",value:"off")
 } 
def Friday_On(){
 sendEvent(name:"Friday",value:"on")
 sendEvent(name:"switch",value:"on")
 }
 def Friday_Off(){
 sendEvent(name:"Friday",value:"off")
 } 
def Saturday_On(){
 sendEvent(name:"Saturday",value:"on")
 sendEvent(name:"switch",value:"on")
 }
 def Saturday_Off(){
 sendEvent(name:"Saturday",value:"off")
 } 
def Sunday_On(){
 sendEvent(name:"Sunday",value:"on")
 sendEvent(name:"switch",value:"on")
 }
 def Sunday_Off(){
 sendEvent(name:"Sunday",value:"off")
 } 
 def SetByC (param1) {
    sendEvent("name":"SetByA", "value":param1)
}
def AllowAppTime_On(){
 	sendEvent(name:"AllowAppTime",value:"on")
 }
 def AllowAppTime_Off(){
 	sendEvent(name:"AllowAppTime",value:"off")
 } 

             
